{"version":3,"sources":["api/api.jsx","components/posts/posts-add.jsx","components/posts/posts-table.jsx","components/posts/posts-container.jsx","store.jsx","components/auth/sign-in.jsx","components/auth/sign-up.jsx","logo.svg","components/header.jsx","private-route.jsx","App.jsx","index.jsx"],"names":["instance","axios","create","baseURL","interceptors","request","use","config","headers","Authorization","localStorage","getItem","PostAdd","props","state","post","title","content","editMode","handleAddPost","bind","handleChange","updateAction","event","preventDefault","this","refreshTable","API","put","id","then","res","console","log","error","target","value","setState","className","onSubmit","htmlFor","type","aria-describedby","placeholder","onChange","role","aria-label","onClick","React","Component","propTypes","PropTypes","func","isRequired","PostTable","posts","filter","handleEditPost","handleRemovePost","fetchPosts","getByID","sendToEdit","find","p","vm","targetValue","get","data","listItems","map","item","key","scope","author","e","PostContainer","postAddForm","createRef","postTable","current","ref","StoreContext","createContext","withStore","WrappedComponent","Consumer","context","store","SignIn","user","email","password","formErrors","handleSubmit","history","Object","keys","forEach","field","validateField","hasErrors","values","length","set","setItem","token","push","name","fieldName","valid","match","errorClass","object","SignUp","firstName","lastName","password2","Header","handleLogout","removeItem","src","logo","alt","to","PrivateRoute","component","rest","render","pathname","any","App","exact","path","PostsContainer","createStore","remove","undefined","Provider","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0f486263.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'http://127.0.0.1:3000/'\n});\n\ninstance.interceptors.request.use((config) => {\n  config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`;\n  return config;\n});\n\nexport default instance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport API from '../../api/api';\n\nclass PostAdd extends React.Component {\n  constructor(props) {\n    const obj1 = { title: '', content: '' };\n\n    super(props);\n    this.state = { post: obj1, editMode: false };\n    this.handleAddPost = this.handleAddPost.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.updateAction = this.updateAction.bind(this);\n  }\n\n  handleAddPost(event) {\n    event.preventDefault();\n    const { editMode, post } = this.state;\n    const { refreshTable } = this.props;\n    if (!post) return;\n    if (editMode) {\n      API.put(`/api/posts/${post.id}`, post)\n        .then((res) => {\n          refreshTable();\n          console.log(res);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      API.post('api/posts', post)\n        .then((res) => {\n          refreshTable();\n          console.log(res);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  }\n\n  handleChange(event) {\n    const { post } = this.state;\n    post[event.target.id] = event.target.value;\n    this.setState({ post });\n  }\n\n  updateAction(post) {\n    if (post) {\n      this.setState({ post, editMode: true });\n    } else {\n      this.setState({ post: { title: '', content: '' }, editMode: false });\n    }\n  }\n\n  render() {\n    const { editMode, post } = this.state;\n    return (\n      <div className=\"card text-left mb-3\">\n        <div className=\"card-body\">\n          <form onSubmit={this.handleAddPost}>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">\n                Title\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                aria-describedby=\"title\"\n                placeholder=\"Enter title\"\n                onChange={this.handleChange}\n                value={post.title}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"content\">\n                Content\n              </label>\n              <textarea className=\"form-control\" id=\"content\" placeholder=\"content\" onChange={this.handleChange} value={post.content} />\n            </div>\n\n            <div className=\"btn-group\" role=\"group\" aria-label=\"\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                {editMode ? 'Edit' : 'Add'}\n              </button>\n              {editMode\n                    && (\n                    <button type=\"button\" className=\"btn btn-warning\" onClick={() => this.updateAction()}>\n                      Close\n                    </button>\n                    )}\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nPostAdd.propTypes = {\n  refreshTable: PropTypes.func.isRequired\n};\nexport default PostAdd;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport API from '../../api/api';\n\nclass PostTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { posts: [], filter: '' };\n    this.handleEditPost = this.handleEditPost.bind(this);\n    this.handleRemovePost = this.handleRemovePost.bind(this);\n    this.fetchPosts = this.fetchPosts.bind(this);\n    this.getByID = this.getByID.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    if (process.env.NODE_ENV === 'test') return;\n    // Continue initialization for non-test environments\n    this.fetchPosts();\n  }\n\n  handleEditPost(event, id) {\n    event.preventDefault();\n    const { sendToEdit } = this.props;\n    const { posts } = this.state;\n    sendToEdit(posts.find((p) => p.id === id));\n  }\n\n  handleRemovePost(event, id) {\n    event.preventDefault();\n    API.delete(`/api/posts/${id}`)\n      .then(() => {\n        this.fetchPosts();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  handleChange(event) {\n    const vm = this;\n    const targetValue = event.target.value;\n    this.setState({ filter: event.target.value }, () => {\n      if (targetValue) vm.getByID();\n      else vm.fetchPosts();\n    });\n  }\n\n  getByID() {\n    const { filter } = this.state;\n    console.log(filter);\n    API.get(`/api/posts/${filter}`)\n      .then((res) => {\n        if (res.data) this.setState({ posts: [res.data] });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  fetchPosts() {\n    API.get('/api/posts')\n      .then((res) => {\n        this.setState({ posts: res.data });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    const { posts, filter } = this.state;\n    const listItems = posts.map((item) => (\n      <tr key={item.id}>\n        <th scope=\"row\">\n          {item.id}\n        </th>\n        <td>\n          {item.title}\n        </td>\n        <td>\n          {item.author}\n        </td>\n        <td>\n          {item.content}\n        </td>\n        <td>\n          <div className=\"btn-group\" role=\"group\" aria-label=\"\">\n            <button type=\"button\" className=\"btn btn-warning\" onClick={(e) => this.handleEditPost(e, item.id)}>\n              Edit\n            </button>\n            <button type=\"button\" className=\"btn btn-danger\" onClick={(e) => this.handleRemovePost(e, item.id)}>\n              Remove\n            </button>\n          </div>\n        </td>\n      </tr>\n    ));\n    return (\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\" id=\"basic-addon1\">\n                Filter\n              </span>\n            </div>\n            <input type=\"text\" className=\"form-control\" placeholder=\"ID\" aria-label=\"ID\" value={filter} onChange={this.handleChange} />\n          </div>\n\n          <table className=\"table table-hover table-responsive-sm\">\n            <thead>\n              <tr>\n                <th scope=\"col\">\n                  #\n                </th>\n                <th scope=\"col\">\n                  Title\n                </th>\n                <th scope=\"col\">\n                  Author\n                </th>\n                <th scope=\"col\">\n                  Content\n                </th>\n                <th scope=\"col\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {listItems}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nPostTable.propTypes = {\n  sendToEdit: PropTypes.func.isRequired,\n};\n\nexport default PostTable;\n","import React, { Component } from 'react';\n\nimport PostAdd from './posts-add';\nimport PostTable from './posts-table';\n\nexport default class PostContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.sendToEdit = this.sendToEdit.bind(this);\n    this.refreshTable = this.refreshTable.bind(this);\n    this.postAddForm = React.createRef();\n    this.postTable = React.createRef();\n  }\n\n  sendToEdit(post) {\n    this.postAddForm.current.updateAction(post);\n  }\n\n  refreshTable(post) {\n    this.postTable.current.fetchPosts(post);\n  }\n\n  render() {\n    return (\n      <div className=\"col\">\n        <PostAdd ref={this.postAddForm} refreshTable={this.refreshTable} />\n        <PostTable sendToEdit={this.sendToEdit} ref={this.postTable} />\n      </div>\n    );\n  }\n}\n","/* eslint-disable react/no-multi-comp */\nimport React from 'react';\n\nconst StoreContext = React.createContext();\nconst createStore = (WrappedComponent) => (\n  class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        // eslint-disable-next-line react/destructuring-assignment\n        get: (key) => this.state[key],\n        set: (key, value) => {\n          this.setState({ [key]: value });\n        },\n        remove: (key) => {\n          this.setState({ [key]: undefined });\n        }\n      };\n    }\n\n    render() {\n      return (\n        <StoreContext.Provider value={this.state}>\n          <WrappedComponent store={this.state} {...this.props} />\n        </StoreContext.Provider>\n      );\n    }\n  });\n\nconst withStore = (WrappedComponent) => (\n  function Wrapper(props) {\n    return (\n      <StoreContext.Consumer>\n        {(context) => <WrappedComponent store={context} {...props} />}\n      </StoreContext.Consumer>\n    );\n  }\n);\n\nexport { StoreContext, createStore, withStore };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStore } from '../../store';\nimport API from '../../api/api';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    const defaults = { email: '', password: '' };\n\n    super(props);\n    this.state = { user: defaults, formErrors: { } };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { user, formErrors } = this.state;\n    const { history, store } = this.props;\n\n    Object.keys(user).forEach((field) => this.validateField(field));\n    const hasErrors = Object.values(formErrors).filter((e) => e).length;\n\n    if (!user || hasErrors) return;\n    API.post('auth/login', user)\n      .then(({ data }) => {\n        this.setState({ error: null });\n        store.set('user', data.user);\n        localStorage.setItem('token', data.token);\n        history.push('/');\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n  }\n\n  handleChange(event) {\n    const { user } = this.state;\n    const name = event.target.id;\n    const { value } = event.target;\n    user[name] = value;\n    this.setState({ user }, () => { this.validateField(name, value); });\n  }\n\n  validateField(fieldName) {\n    const { formErrors, user } = this.state;\n    const value = user[fieldName];\n    let valid;\n\n    switch (fieldName) {\n      case 'email':\n        valid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        formErrors.email = valid ? '' : 'Email is invalid';\n        break;\n      case 'password':\n        valid = value.length >= 6;\n        formErrors.password = valid ? '' : 'Password is too short';\n        break;\n      default:\n        break;\n    }\n    this.setState({ formErrors });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  errorClass(error) {\n    return (error ? 'is-invalid' : '');\n  }\n\n  render() {\n    const { user, formErrors, error } = this.state;\n    return (\n      <div className=\"card text-left mb-3\">\n        <div className=\"card-body\">\n          <form onSubmit={this.handleSubmit}>\n            { error && (\n              <div className=\"alert alert-danger\">\n                Invalid credentials\n              </div>\n            )}\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">\n                Email\n              </label>\n              <input\n                type=\"email\"\n                className={`form-control ${this.errorClass(formErrors.email)}`}\n                id=\"email\"\n                aria-describedby=\"email\"\n                placeholder=\"Enter email\"\n                onChange={this.handleChange}\n                value={user.email}\n              />\n              {formErrors.email && (\n                <div className=\"invalid-feedback\">\n                  {formErrors.email}\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">\n                Password\n              </label>\n              <input\n                type=\"password\"\n                className={`form-control ${this.errorClass(formErrors.password)}`}\n                id=\"password\"\n                placeholder=\"Enter password\"\n                onChange={this.handleChange}\n                value={user.password}\n              />\n              {formErrors.password && (\n                <div className=\"invalid-feedback\">\n                  {formErrors.password}\n                </div>\n              )}\n            </div>\n            <div className=\"btn-group\" role=\"group\" aria-label=\"\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Sign In\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nSignIn.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  store: PropTypes.object.isRequired,\n};\nexport default withStore(SignIn);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport API from '../../api/api';\nimport { withStore } from '../../store';\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    const defaults = {\n      email: '', firstName: '', lastName: '', password: '', password2: ''\n    };\n\n    super(props);\n    this.state = { user: defaults, formErrors: { } };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { user, formErrors } = this.state;\n    const { history, store } = this.props;\n\n    Object.keys(user).forEach((field) => this.validateField(field));\n    const hasErrors = Object.values(formErrors).filter((e) => e).length;\n\n    if (!user || hasErrors) return;\n    API.post('auth/register', user)\n      .then(({ data }) => {\n        this.setState({ error: null });\n        store.set('user', data.user);\n        localStorage.setItem('token', data.token);\n        history.push('/');\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n  }\n\n  handleChange(event) {\n    const { user } = this.state;\n    const name = event.target.id;\n    const { value } = event.target;\n    user[name] = value;\n    this.setState({ user }, () => { this.validateField(name, value); });\n  }\n\n  validateField(fieldName) {\n    const { formErrors, user } = this.state;\n    const value = user[fieldName];\n    let valid;\n\n    switch (fieldName) {\n      case 'email':\n        valid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        formErrors.email = valid ? '' : 'Email is invalid';\n        break;\n      case 'firstName':\n      case 'lastName':\n        valid = !!value;\n        formErrors[fieldName] = valid ? '' : 'Please fill this field';\n        break;\n      case 'password':\n        valid = value.length >= 6;\n        formErrors.password = valid ? '' : 'Password is too short';\n        break;\n      case 'password2':\n        valid = value === user.password;\n        formErrors.password2 = valid ? '' : 'Password doesn\\'t match';\n        break;\n      default:\n        break;\n    }\n    this.setState({ formErrors });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  errorClass(error) {\n    return (error ? 'is-invalid' : '');\n  }\n\n  render() {\n    const { user, formErrors, error } = this.state;\n    return (\n      <div className=\"card text-left mb-3\">\n        <div className=\"card-body\">\n          <form onSubmit={this.handleSubmit}>\n            { error && (\n              <div className=\"alert alert-danger\">\n                Some error occurred\n              </div>\n            )}\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">\n                Email\n              </label>\n              <input\n                type=\"email\"\n                className={`form-control ${this.errorClass(formErrors.email)}`}\n                id=\"email\"\n                aria-describedby=\"email\"\n                placeholder=\"Enter email\"\n                onChange={this.handleChange}\n                value={user.email}\n              />\n              {formErrors.email && (\n                <div className=\"invalid-feedback\">\n                  {formErrors.email}\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"firstName\">\n                First Name\n              </label>\n              <input\n                type=\"text\"\n                className={`form-control ${this.errorClass(formErrors.firstName)}`}\n                id=\"firstName\"\n                aria-describedby=\"firstName\"\n                placeholder=\"Enter first name\"\n                onChange={this.handleChange}\n                value={user.firstName}\n              />\n              {formErrors.firstName && (\n                <div className=\"invalid-feedback\">\n                  {formErrors.firstName}\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"lastName\">\n                Last Name\n              </label>\n              <input\n                type=\"lastName\"\n                className={`form-control ${this.errorClass(formErrors.lastName)}`}\n                id=\"lastName\"\n                aria-describedby=\"lastName\"\n                placeholder=\"Enter last name\"\n                onChange={this.handleChange}\n                value={user.lastName}\n              />\n              {formErrors.lastName && (\n                <div className=\"invalid-feedback\">\n                  {formErrors.lastName}\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">\n                Password\n              </label>\n              <input\n                type=\"password\"\n                className={`form-control ${this.errorClass(formErrors.password)}`}\n                id=\"password\"\n                placeholder=\"Enter password\"\n                onChange={this.handleChange}\n                value={user.password}\n              />\n              {formErrors.password && (\n                <div className=\"invalid-feedback\">\n                  {formErrors.password}\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password2\">\n                Repeat Password\n              </label>\n              <input\n                type=\"password\"\n                className={`form-control ${this.errorClass(formErrors.password2)}`}\n                id=\"password2\"\n                placeholder=\"Enter password2\"\n                onChange={this.handleChange}\n                value={user.password2}\n              />\n              {formErrors.password2 && (\n                <div className=\"invalid-feedback\">\n                  {formErrors.password2}\n                </div>\n              )}\n            </div>\n            <div className=\"btn-group\" role=\"group\" aria-label=\"\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Sign Up\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nSignUp.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  store: PropTypes.object.isRequired,\n};\nexport default withStore(SignUp);\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { withStore } from '../store';\nimport logo from '../logo.svg';\nimport API from '../api/api';\n\n// Define the main app\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  componentDidMount() {\n    const { store } = this.props;\n    if (!store.get('user')) {\n      API.get('auth/me').then(({ data }) => {\n        store.set('user', data);\n      });\n    }\n  }\n\n  handleLogout() {\n    const { store } = this.props;\n    store.set('user', {});\n    localStorage.removeItem('token');\n  }\n\n  render() {\n    const { store } = this.props;\n    const user = store.get('user');\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">\n            Welcome to React. This demo was modified to include &lt;POSTS&gt; module\n          </h1>\n          {user && user.id && (\n            <p>\n              {'Hello, '}\n              {user.firstName}\n              {' '}\n              {user.lastName}\n            </p>\n          )}\n          <div className=\"d-flex justify-content-center\">\n            {!user.id && (\n              <Link to=\"/sign_in\" className=\"btn btn-success mr-2\">\n                Sign In\n              </Link>\n            )}\n            {!user.id && (\n              <Link to=\"/sign_up\" className=\"btn btn-success mr-2\">\n                Sign Up\n              </Link>\n            )}\n            {user && user.id && (\n              <button type=\"button\" onClick={this.handleLogout} className=\"btn btn-danger\">\n                Logout\n              </button>\n            )}\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  store: PropTypes.object.isRequired,\n};\nexport default withStore(Header);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStore } from './store';\n\nconst PrivateRoute = ({ store, component: Component, ...rest }) => {\n  const user = store.get('user');\n  return (\n    <Route\n      {...rest}\n      render={(props) => (user && user.id ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to={{ pathname: '/sign_in' }} />\n      ))}\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  store: PropTypes.object.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  component: PropTypes.any.isRequired\n};\n\nexport default withStore(PrivateRoute);\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport PostsContainer from './components/posts/posts-container';\nimport SignIn from './components/auth/sign-in';\nimport SignUp from './components/auth/sign-up';\nimport Header from './components/header';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { createStore } from './store';\nimport PrivateRoute from './private-route';\nimport API from './api/api';\n\n// Define the main app\nconst App = ({ store }) => {\n  const user = store.get('user');\n  if (!user) {\n    API.get('auth/me').then(({ data }) => {\n      store.set('user', data);\n    }).catch(() => {\n      store.set('user', {});\n    });\n    return null;\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <p className=\"App-intro\">\n          To get started, edit\n          {' '}\n          <code>\n            src/App.jsx\n          </code>\n          {' '}\n          and save to reload.\n        </p>\n        <div className=\"container\">\n          <div>\n            <PrivateRoute exact path=\"/\" component={PostsContainer} />\n            <Route path=\"/sign_in\" component={SignIn} />\n            <Route path=\"/sign_up\" component={SignUp} />\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nApp.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  store: PropTypes.object.isRequired\n};\n\nexport default createStore(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}